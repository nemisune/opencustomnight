[gd_scene load_steps=72 format=2]

[ext_resource path="res://sprites/static/123.png" type="Texture" id=1]
[ext_resource path="res://sprites/static/117.png" type="Texture" id=2]
[ext_resource path="res://objects/menu/settings.gd" type="Script" id=3]
[ext_resource path="res://objects/menu/menu.gd" type="Script" id=4]
[ext_resource path="res://objects/menu/presentationtext.tres" type="Theme" id=5]
[ext_resource path="res://sprites/menu/css/54.png" type="Texture" id=6]
[ext_resource path="res://sprites/office/fan/5ea.png" type="Texture" id=7]
[ext_resource path="res://sprites/menu/begin.png" type="Texture" id=8]
[ext_resource path="res://sprites/menu/css/5d.png" type="Texture" id=9]
[ext_resource path="res://audio/menu/goodluck.mp3" type="AudioStream" id=10]
[ext_resource path="res://sprites/menu/css/50.png" type="Texture" id=11]
[ext_resource path="res://sprites/menu/creditstext.png" type="Texture" id=12]
[ext_resource path="res://sprites/menu/warning.png" type="Texture" id=13]
[ext_resource path="res://sprites/menu/css/4e.png" type="Texture" id=14]
[ext_resource path="res://audio/menu/540478__breviceps__metallic-file-select.wav" type="AudioStream" id=15]
[ext_resource path="res://sprites/menu/perspectivetext.png" type="Texture" id=16]
[ext_resource path="res://sprites/menu/fred.png" type="Texture" id=17]
[ext_resource path="res://sprites/menu/returntext.png" type="Texture" id=18]
[ext_resource path="res://sprites/menu/css/67.png" type="Texture" id=19]
[ext_resource path="res://sprites/menu/shadow.png" type="Texture" id=20]
[ext_resource path="res://audio/menu/451297__audiopapkin__crazy-impact-9.wav" type="AudioStream" id=21]
[ext_resource path="res://sprites/menu/goodlucktext.png" type="Texture" id=22]
[ext_resource path="res://sprites/menu/office.png" type="Texture" id=23]
[ext_resource path="res://sprites/menu/custombg.png" type="Texture" id=24]
[ext_resource path="res://audio/menu/241157__speedenza__ping-impact.wav" type="AudioStream" id=25]
[ext_resource path="res://sprites/menu/css/8.png" type="Texture" id=26]
[ext_resource path="res://sprites/menu/glitch.png" type="Texture" id=27]
[ext_resource path="res://sprites/static/119.png" type="Texture" id=28]
[ext_resource path="res://sprites/menu/main text.png" type="Texture" id=29]
[ext_resource path="res://sprites/menu/settingsbg.png" type="Texture" id=30]
[ext_resource path="res://sprites/menu/customtext.png" type="Texture" id=31]
[ext_resource path="res://sprites/menu/cursor highlight.png" type="Texture" id=32]
[ext_resource path="res://sprites/menu/settingtext.png" type="Texture" id=33]
[ext_resource path="res://sprites/static/125.png" type="Texture" id=34]
[ext_resource path="res://sprites/menu/background.png" type="Texture" id=35]
[ext_resource path="res://sprites/static/126.png" type="Texture" id=36]
[ext_resource path="res://sprites/menu/css/10.png" type="Texture" id=37]
[ext_resource path="res://sprites/static/129.png" type="Texture" id=38]
[ext_resource path="res://sprites/menu/logo.png" type="Texture" id=39]
[ext_resource path="res://sprites/menu/logo_large_color_light.png" type="Texture" id=40]
[ext_resource path="res://sprites/menu/css/57.png" type="Texture" id=41]
[ext_resource path="res://sprites/menu/css/51.png" type="Texture" id=42]
[ext_resource path="res://audio/266690__timbre__flac-ominous-rumble-drone-with-metallic-resonance.mp3" type="AudioStream" id=43]
[ext_resource path="res://sprites/menu/fade.png" type="Texture" id=44]
[ext_resource path="res://sprites/menu/css/5b.png" type="Texture" id=45]
[ext_resource path="res://icon.png" type="Texture" id=46]
[ext_resource path="res://sprites/menu/css/6f.png" type="Texture" id=47]
[ext_resource path="res://objects/menu/css.gd" type="Script" id=48]
[ext_resource path="res://objects/menu/mainbutton.tres" type="ButtonGroup" id=49]
[ext_resource path="res://sprites/menu/volumetext.png" type="Texture" id=50]

[sub_resource type="Shader" id=10]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/god-rays

Feel free to use, improve and change this shader according to your needs
and consider sharing the modified result on godotshaders.com.
*/

shader_type canvas_item;

uniform float angle = 0;
uniform float position = -0.2;
uniform float spread : hint_range(0.0, 1.0) = 0.5;
uniform float cutoff : hint_range(-1.0, 1.0) = 0.1;
uniform float falloff : hint_range(0.0, 1.0) = 0.2;
uniform float edge_fade : hint_range(0.0, 1.0) = 0.15;

uniform float speed = 1.0;
uniform float ray1_density = 8.0;
uniform float ray2_density = 30.0;
uniform float ray2_intensity : hint_range(0.0, 1.0) = 0.3;

uniform vec4 color : hint_color = vec4(1.0, 0.9, 0.65, 0.8);

uniform bool hdr = false;
uniform float seed = 5.0;

// Random and noise functions from Book of Shader's chapter on Noise.
float random(vec2 _uv) {
    return fract(sin(dot(_uv.xy,
                         vec2(12.9898, 78.233))) *
        43758.5453123);
}

float noise (in vec2 uv) {
    vec2 i = floor(uv);
    vec2 f = fract(uv);

    // Four corners in 2D of a tile
    float a = random(i);
    float b = random(i + vec2(1.0, 0.0));
    float c = random(i + vec2(0.0, 1.0));
    float d = random(i + vec2(1.0, 1.0));


    // Smooth Interpolation

    // Cubic Hermine Curve. Same as SmoothStep()
    vec2 u = f * f * (3.0-2.0 * f);

    // Mix 4 coorners percentages
    return mix(a, b, u.x) +
            (c - a)* u.y * (1.0 - u.x) +
            (d - b) * u.x * u.y;
}

mat2 rotate(float _angle){
    return mat2(vec2(cos(_angle), -sin(_angle)),
                vec2(sin(_angle), cos(_angle)));
}

vec4 screen(vec4 base, vec4 blend){
	return 1.0 - (1.0 - base) * (1.0 - blend);
}

void fragment()
{
	
	// Rotate, skew and move the UVs
	vec2 transformed_uv = ( rotate(angle) * (UV - position) )  / ( (UV.y + spread) - (UV.y * spread) );
	
	// Animate the ray according the the new transformed UVs
	vec2 ray1 = vec2(transformed_uv.x * ray1_density + sin(TIME * 0.1 * speed) * (ray1_density * 0.2) + seed, 1.0);
	vec2 ray2 = vec2(transformed_uv.x * ray2_density + sin(TIME * 0.2 * speed) * (ray1_density * 0.2) + seed, 1.0);
	
	// Cut off the ray's edges
	float cut = step(cutoff, transformed_uv.x) * step(cutoff, 1.0 - transformed_uv.x);
	ray1 *= cut;
	ray2 *= cut;
	
	// Apply the noise pattern (i.e. create the rays)
	float rays;
	
	if (hdr){
		// This is not really HDR, but check this to not clamp the two merged rays making 
		// their values go over 1.0. Can make for some nice effect
		rays = noise(ray1) + (noise(ray2) * ray2_intensity);
	}
	else{
		 rays = clamp(noise(ray1) + (noise(ray2) * ray2_intensity), 0., 1.);
	}
	
	// Fade out edges
	rays *= smoothstep(0.0, falloff, (1.0 - UV.y)); // Bottom
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, transformed_uv.x); // Left
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, 1.0 - transformed_uv.x); // Right
	
	// Color to the rays
	vec3 shine = vec3(rays) * color.rgb;

	// Try different blending modes for a nicer effect. \"Screen\" is included in the code,
	// but take a look at https://godotshaders.com/snippet/blending-modes/ for more.
	// With \"Screen\" blend mode:
	shine = screen(texture(SCREEN_TEXTURE, SCREEN_UV), vec4(color)).rgb;
	
	COLOR = vec4(shine, rays * color.a);
}"

[sub_resource type="ShaderMaterial" id=11]
shader = SubResource( 10 )
shader_param/angle = -3.145
shader_param/position = 1.006
shader_param/spread = 0.991
shader_param/cutoff = -0.394
shader_param/falloff = 0.235
shader_param/edge_fade = 0.9
shader_param/speed = 5.0
shader_param/ray1_density = 9.0
shader_param/ray2_density = 9.0
shader_param/ray2_intensity = 0.0
shader_param/color = Color( 1, 0.129412, 0.129412, 0.282353 )
shader_param/hdr = false
shader_param/seed = 5.0

[sub_resource type="SpriteFrames" id=1]
animations = [ {
"frames": [ ExtResource( 2 ), ExtResource( 28 ), ExtResource( 1 ), ExtResource( 34 ), ExtResource( 36 ), ExtResource( 38 ) ],
"loop": true,
"name": "default",
"speed": 30.0
} ]

[sub_resource type="Animation" id=15]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=16]
resource_name = "playing"
loop = true
step = 0.0333333
tracks/0/type = "value"
tracks/0/path = NodePath(".:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.166667, 0.266667, 0.366667, 0.533333, 0.666667, 0.833333, 0.933333 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0.231373 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0.113725 ), Color( 1, 1, 1, 0.545098 ), Color( 1, 1, 1, 0.784314 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0.0980392 ) ]
}

[sub_resource type="Shader" id=8]
code = "shader_type canvas_item;

uniform vec4 color : hint_color = vec4(1.0);
uniform float width : hint_range(0, 10) = 10.0;
uniform int pattern : hint_range(0, 2) = 0; // diamond, circle, square
uniform bool inside = false;
uniform bool add_margins = true; // only useful when inside is false

void vertex() {
	if (add_margins) {
		VERTEX += (UV * 2.0 - 1.0) * width;
	}
}

bool hasContraryNeighbour(vec2 uv, vec2 texture_pixel_size, sampler2D texture) {
	for (float i = -ceil(width); i <= ceil(width); i++) {
		float x = abs(i) > width ? width * sign(i) : i;
		float offset;
		
		if (pattern == 0) {
			offset = width - abs(x);
		} else if (pattern == 1) {
			offset = floor(sqrt(pow(width + 0.5, 2) - x * x));
		} else if (pattern == 2) {
			offset = width;
		}
		
		for (float j = -ceil(offset); j <= ceil(offset); j++) {
			float y = abs(j) > offset ? offset * sign(j) : j;
			vec2 xy = uv + texture_pixel_size * vec2(x, y);
			
			if ((xy != clamp(xy, vec2(0.0), vec2(1.0)) || texture(texture, xy).a == 0.0) == inside) {
				return true;
			}
		}
	}
	
	return false;
}

void fragment() {
	vec2 uv = UV;
	
	if (add_margins) {
		vec2 texture_pixel_size = vec2(1.0) / (vec2(1.0) / TEXTURE_PIXEL_SIZE + vec2(width * 2.0));
		
		uv = (uv - texture_pixel_size * width) * TEXTURE_PIXEL_SIZE / texture_pixel_size;
		
		if (uv != clamp(uv, vec2(0.0), vec2(1.0))) {
			COLOR.a = 0.0;
		} else {
			COLOR = texture(TEXTURE, uv);
		}
	} else {
		COLOR = texture(TEXTURE, uv);
	}
	
	if ((COLOR.a > 0.0) == inside && hasContraryNeighbour(uv, TEXTURE_PIXEL_SIZE, TEXTURE)) {
		COLOR.rgb = inside ? mix(COLOR.rgb, color.rgb, color.a) : color.rgb;
		COLOR.a += (1.0 - COLOR.a) * color.a;
	}
}"

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 8 )
shader_param/color = Color( 1, 1, 1, 1 )
shader_param/width = 10.0
shader_param/pattern = 0
shader_param/inside = false
shader_param/add_margins = true

[sub_resource type="Shader" id=6]
code = "shader_type canvas_item;

uniform float zoom = 300;
uniform bool pDir = false;
uniform bool noWrap = true;


void fragment() {
  float fB;
  float fC;


  vec2 posTex;
  vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
  vec2 uv = SCREEN_UV;
vec2 fPixel = SCREEN_PIXEL_SIZE;

  if(pDir == false){
	
    fB = 1.0 - (zoom * fPixel.y);
    fC = max(0.02, 1.0 + (fB - 1.0) * 4.0 * pow((uv.x - 0.5), 2.0));
    
    posTex = uv * vec2(1.0, fC) + vec2(0.0, (1.0 - fC) / 2.0);
    
    if(noWrap == false || (posTex.y >= 0.0 && posTex.y <= 1.0)){
      COLOR.rgb = textureLod(SCREEN_TEXTURE, posTex, 0.0).rgb;
    }
  } else {
    fB = 1.0 - (zoom * fPixel.x);
    fC = max(0.05, 1.0 + (fB - 1.0) * 4.0 * pow((uv.y - 0.5), 2.0));
    
    posTex = uv * vec2(fC, 1.0) + vec2((1.0 - fC) / 2.0, 0.0);
    
    if(noWrap == false || (posTex.x >= 0.0 && posTex.x <= 1.0)){
      COLOR.rgb = textureLod(SCREEN_TEXTURE, posTex, 0.0).rgb;
    }
  }
}"

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 6 )
shader_param/zoom = 300.0
shader_param/pDir = false
shader_param/noWrap = true

[sub_resource type="ShaderMaterial" id=14]

[sub_resource type="DynamicFontData" id=17]
font_path = "res://font/minsans/MinSans-Regular.otf"

[sub_resource type="DynamicFont" id=18]
size = 23
font_data = SubResource( 17 )

[sub_resource type="Animation" id=2]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("music:playing")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ false ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("uhoh:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( -952, -208 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("uhoh/warning:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("LogoLargeColorLight:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( -1006, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("bg:self_modulate")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("uhoh:self_modulate")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("uhoh:modulate")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("LogoLargeColorLight:self_modulate")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("camera:position")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}

[sub_resource type="Animation" id=19]
resource_name = "go2credits"
step = 0.0166667
tracks/0/type = "value"
tracks/0/path = NodePath("uhoh:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"update": 0,
"values": [  ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("LogoLargeColorLight:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"update": 0,
"values": [  ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("uhoh:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"update": 0,
"values": [  ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("LogoLargeColorLight:self_modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"update": 0,
"values": [  ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("camera:position")
tracks/4/interp = 2
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( -2, 1 ),
"update": 0,
"values": [ Vector2( 0, 679 ), Vector2( 1424, 679 ) ]
}

[sub_resource type="Animation" id=13]
resource_name = "go2custom"
step = 0.0166667
tracks/0/type = "value"
tracks/0/path = NodePath("uhoh:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"update": 0,
"values": [  ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("LogoLargeColorLight:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"update": 0,
"values": [  ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("uhoh:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"update": 0,
"values": [  ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("LogoLargeColorLight:self_modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"update": 0,
"values": [  ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("camera:position")
tracks/4/interp = 2
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( -2, 1 ),
"update": 0,
"values": [ Vector2( 0, 679 ), Vector2( -1424, 679 ) ]
}

[sub_resource type="Animation" id=5]
resource_name = "go2settings"
step = 0.0166667
tracks/0/type = "value"
tracks/0/path = NodePath("camera:position")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( -2, 1 ),
"update": 0,
"values": [ Vector2( 0, 679 ), Vector2( 0, 1622 ) ]
}

[sub_resource type="Animation" id=4]
resource_name = "main"
length = 0.0166667
step = 0.0166667
tracks/0/type = "value"
tracks/0/path = NodePath("uhoh:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"update": 0,
"values": [  ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("LogoLargeColorLight:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"update": 0,
"values": [  ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("uhoh:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"update": 0,
"values": [  ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("LogoLargeColorLight:self_modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"update": 0,
"values": [  ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("camera:position")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 679 ) ]
}

[sub_resource type="Animation" id=12]
resource_name = "settings"
length = 0.0166667
step = 0.0166667
tracks/0/type = "value"
tracks/0/path = NodePath("camera:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 1622 ) ]
}

[sub_resource type="Animation" id=3]
resource_name = "warning"
length = 12.0
step = 0.0166667
tracks/0/type = "value"
tracks/0/path = NodePath("uhoh:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 1.819, 2.244, 4.488, 4.879 ),
"transitions": PoolRealArray( 0.5, 1, 2, 1 ),
"update": 0,
"values": [ Vector2( 0, -421 ), Vector2( 0, 0 ), Vector2( 0, 0 ), Vector2( 0, 380 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("LogoLargeColorLight:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 1.819, 5.117, 5.984, 8.058, 8.823 ),
"transitions": PoolRealArray( 1, 0.5, 1, 2, 1 ),
"update": 0,
"values": [ Vector2( -1006, 0 ), Vector2( -1006, 0 ), Vector2( 0, 0 ), Vector2( 0, 0 ), Vector2( 873, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("uhoh:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1.836, 2.244, 4.488, 4.879 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("LogoLargeColorLight:self_modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 5.117, 5.984, 8.058, 8.823 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("camera:position")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 1.819, 8.823, 10.693 ),
"transitions": PoolRealArray( 1, 0.5, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 0, 0 ), Vector2( 0, 679 ) ]
}

[sub_resource type="Animation" id=20]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("flashdark:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("start:playing")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ false ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("start:volume_db")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ -13.041 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("goodluck:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( -552, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("goodluck:playing")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ false ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("Goodlucktext:visible")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ true ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("Goodlucktext:self_modulate")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("Goodlucktext:modulate")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("flashdark:self_modulate")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/9/type = "value"
tracks/9/path = NodePath("../music:volume_db")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}

[sub_resource type="Animation" id=21]
resource_name = "goodluck"
length = 7.66667
step = 0.0333333
tracks/0/type = "value"
tracks/0/path = NodePath("flashdark:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("start:playing")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 6.46667 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("start:volume_db")
tracks/2/interp = 2
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 2.7, 6.2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ -13.041, -13.041, -80.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("goodluck:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 3.66667, 4.46667 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( -552, 0 ), Vector2( -552, 0 ), Vector2( 552, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("goodluck:playing")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 3.73333, 4.53333 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ false, true, false ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("Goodlucktext:visible")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 3.66667 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, true ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("Goodlucktext:modulate")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 3.66667, 4.53333, 5.66667, 6.9 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 0, 0, 0, 0 ) ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("flashdark:self_modulate")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0, 0.733333, 6.6, 7.63333 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ), Color( 0, 0, 0, 0 ), Color( 0, 0, 0, 1 ) ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("../music:volume_db")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0, 4.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, -80.0 ]
}

[node name="menu" type="Node2D"]
script = ExtResource( 4 )
__meta__ = {
"_edit_horizontal_guides_": [ 1270.0, 830.0, 868.0, 750.0 ]
}

[node name="bg" type="Sprite" parent="."]
position = Vector2( 215.502, 794.5 )
scale = Vector2( 2.69922, 3.20694 )
z_index = -2
texture = ExtResource( 35 )

[node name="uhoh" type="Node2D" parent="."]
position = Vector2( -952, -208 )

[node name="warning" type="Sprite" parent="uhoh"]
position = Vector2( -377, -24 )
texture = ExtResource( 13 )
__meta__ = {
"_edit_lock_": true
}

[node name="warning2" type="Sprite" parent="uhoh"]
position = Vector2( 377, -24 )
texture = ExtResource( 13 )
__meta__ = {
"_edit_lock_": true
}

[node name="disclaimer" type="RichTextLabel" parent="uhoh"]
self_modulate = Color( 1, 0, 0, 1 )
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -320.5
margin_top = -79.0
margin_right = 320.5
margin_bottom = 79.0
theme = ExtResource( 5 )
bbcode_enabled = true
bbcode_text = "[center]!!WARNING!!
This game contains loud sounds and jumpscares!
If you're weak of heart, you may
want to turn back.[/center]"
text = "!!WARNING!!
This game contains loud sounds and jumpscares!
If you're weak of heart, you may
want to turn back."
__meta__ = {
"_edit_lock_": true
}

[node name="music" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 43 )

[node name="hover" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 15 )

[node name="select" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 25 )

[node name="main" type="Node2D" parent="."]

[node name="fredtemp" type="Sprite" parent="main"]
position = Vector2( 180, 688 )
scale = Vector2( 0.873611, 0.873611 )
texture = ExtResource( 17 )

[node name="godrays" type="Sprite" parent="main"]
material = SubResource( 11 )
position = Vector2( -7, 684 )
scale = Vector2( 17.8438, 11 )
texture = ExtResource( 46 )

[node name="fade" type="Sprite" parent="main"]
position = Vector2( -7.5, 1038 )
scale = Vector2( 0.999219, 0.840425 )
texture = ExtResource( 44 )

[node name="fade2" type="Sprite" parent="main"]
position = Vector2( -6, 307 )
scale = Vector2( 0.999219, 0.840425 )
texture = ExtResource( 44 )
__meta__ = {
"_edit_lock_": true
}

[node name="sidefade" type="Sprite" parent="main"]
position = Vector2( -561, 738 )
rotation = 1.5708
scale = Vector2( 0.999219, 0.840425 )
texture = ExtResource( 44 )

[node name="sidefade2" type="Sprite" parent="main"]
position = Vector2( 536, 676 )
rotation = 1.5708
scale = Vector2( 0.999219, 0.840425 )
texture = ExtResource( 44 )

[node name="static" type="AnimatedSprite" parent="main"]
modulate = Color( 0.258824, 0.0823529, 0.0823529, 1 )
position = Vector2( -13, 654 )
scale = Vector2( 2.18958, 2.33704 )
z_index = -1
frames = SubResource( 1 )
frame = 4
playing = true
__meta__ = {
"_edit_lock_": true
}

[node name="mcn" type="Sprite" parent="main"]
position = Vector2( 20.2222, 678.5 )
scale = Vector2( 0.834722, 0.834722 )
texture = ExtResource( 39 )

[node name="settingsGo" type="Button" parent="main" groups=["button"]]
self_modulate = Color( 1, 1, 1, 0 )
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -494.0
margin_top = 813.0
margin_right = -338.0
margin_bottom = 848.0
rect_scale = Vector2( 0.979082, 0.991629 )
group = ExtResource( 49 )

[node name="testGo" type="Button" parent="main" groups=["button"]]
self_modulate = Color( 1, 1, 1, 0 )
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -490.0
margin_top = 732.0
margin_right = -305.0
margin_bottom = 767.0
rect_scale = Vector2( 0.979082, 0.991629 )
group = ExtResource( 49 )

[node name="customGo" type="Button" parent="main" groups=["button"]]
self_modulate = Color( 1, 1, 1, 0 )
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -493.0
margin_top = 773.0
margin_right = -256.0
margin_bottom = 808.0
group = ExtResource( 49 )
__meta__ = {
"_edit_use_anchors_": true
}

[node name="creditsGo" type="Button" parent="main" groups=["button"]]
self_modulate = Color( 1, 1, 1, 0 )
margin_left = -492.0
margin_top = 854.0
margin_right = -365.0
margin_bottom = 887.0

[node name="text" type="Sprite" parent="main"]
position = Vector2( -1.11108, 691.5 )
scale = Vector2( 0.801389, 0.801389 )
z_index = 2
texture = ExtResource( 29 )
__meta__ = {
"_edit_lock_": true
}

[node name="cursor" type="Sprite" parent="main"]
position = Vector2( -334, -395 )
texture = ExtResource( 32 )

[node name="cursoranim" type="AnimationPlayer" parent="main/cursor"]
anims/RESET = SubResource( 15 )
anims/playing = SubResource( 16 )

[node name="settings" type="Node2D" parent="."]
position = Vector2( 0, 1624 )
script = ExtResource( 3 )

[node name="Shadow" type="Sprite" parent="settings"]
position = Vector2( -1, -1.49999 )
scale = Vector2( 0.8, 0.834722 )
texture = ExtResource( 20 )

[node name="settingsbg" type="Sprite" parent="settings"]
position = Vector2( 0, -2 )
texture = ExtResource( 30 )
__meta__ = {
"_edit_lock_": true
}

[node name="Fade" type="Sprite" parent="settings"]
position = Vector2( -7, -364 )
scale = Vector2( 1.00241, 0.962013 )
texture = ExtResource( 44 )

[node name="Returntext" type="Sprite" parent="settings"]
position = Vector2( -433, 275 )
texture = ExtResource( 18 )

[node name="Settingtext" type="Sprite" parent="settings"]
position = Vector2( -415, -263 )
texture = ExtResource( 33 )

[node name="office" type="Sprite" parent="settings"]
material = SubResource( 9 )
position = Vector2( 0, 51.5 )
scale = Vector2( 0.330556, 0.330556 )
texture = ExtResource( 23 )

[node name="desk" type="Sprite" parent="settings/office"]
position = Vector2( -2.88806, 155.955 )
texture = ExtResource( 7 )

[node name="effect" type="Sprite" parent="settings/office"]
material = SubResource( 7 )
position = Vector2( 0.101196, -1.5127 )
scale = Vector2( 22.8782, 16.875 )
texture = ExtResource( 46 )

[node name="perspectivetoggle" type="CheckBox" parent="settings"]
margin_left = -108.0
margin_top = -240.0
margin_right = -84.0
margin_bottom = -216.0
rect_scale = Vector2( 3, 3 )
pressed = true

[node name="Perspectivetext" type="Sprite" parent="settings"]
position = Vector2( -302, -203 )
texture = ExtResource( 16 )

[node name="settingsBack" type="Button" parent="settings"]
self_modulate = Color( 1, 1, 1, 0 )
margin_left = -509.0
margin_top = 258.0
margin_right = -355.0
margin_bottom = 295.0

[node name="Volumetext" type="Sprite" parent="settings"]
position = Vector2( -421, -148 )
texture = ExtResource( 50 )

[node name="volumeslider" type="HSlider" parent="settings"]
margin_left = -318.0
margin_top = -170.0
margin_right = 45.0
margin_bottom = -119.0
min_value = -30.0
max_value = 0.0
step = 0.05

[node name="custom" type="Node2D" parent="."]

[node name="Custombg" type="Sprite" parent="custom"]
position = Vector2( -1426.56, 678 )
scale = Vector2( 0.836111, 0.836111 )
texture = ExtResource( 24 )
__meta__ = {
"_edit_lock_": true
}

[node name="Shadow" type="Sprite" parent="custom"]
position = Vector2( -1443.49, 681.49 )
rotation = 1.5708
scale = Vector2( 0.468734, 1.44461 )
texture = ExtResource( 20 )

[node name="fade6" type="Sprite" parent="custom"]
position = Vector2( -855, 609 )
rotation = 1.5708
scale = Vector2( 0.999219, 0.840425 )
texture = ExtResource( 44 )

[node name="Customtext" type="Sprite" parent="custom"]
position = Vector2( -1769, 415 )
texture = ExtResource( 31 )

[node name="Begin" type="Sprite" parent="custom"]
position = Vector2( -1857, 952.5 )
texture = ExtResource( 8 )

[node name="Returntext" type="Sprite" parent="custom"]
position = Vector2( -996, 950.5 )
texture = ExtResource( 18 )

[node name="returnCSS" type="Button" parent="custom"]
self_modulate = Color( 1, 1, 1, 0 )
margin_left = -1070.0
margin_top = 934.5
margin_right = -922.0
margin_bottom = 968.5

[node name="begin" type="Button" parent="custom"]
self_modulate = Color( 1, 1, 1, 0 )
margin_left = -1926.0
margin_top = 929.5
margin_right = -1788.0
margin_bottom = 972.5

[node name="css" type="Node2D" parent="custom"]
position = Vector2( -1424, 680 )
script = ExtResource( 48 )

[node name="goldy" type="Sprite" parent="custom/css"]
position = Vector2( 311, 103 )
texture = ExtResource( 47 )

[node name="nightfreddy" type="Sprite" parent="custom/css"]
position = Vector2( 390, -115 )
texture = ExtResource( 26 )

[node name="bb" type="Sprite" parent="custom/css"]
position = Vector2( -314, 103 )
texture = ExtResource( 45 )

[node name="jj" type="Sprite" parent="custom/css"]
position = Vector2( -157, 103 )
texture = ExtResource( 9 )

[node name="scrap" type="Sprite" parent="custom/css"]
position = Vector2( 1, 103 )
texture = ExtResource( 19 )

[node name="fredbear" type="Sprite" parent="custom/css"]
position = Vector2( 156, 103 )
texture = ExtResource( 37 )

[node name="chica" type="Sprite" parent="custom/css"]
position = Vector2( -249, -115 )
texture = ExtResource( 11 )

[node name="freddy" type="Sprite" parent="custom/css"]
material = SubResource( 14 )
position = Vector2( -405, -115 )
texture = ExtResource( 14 )

[node name="foxy" type="Sprite" parent="custom/css"]
position = Vector2( -91, -115 )
texture = ExtResource( 42 )

[node name="toychica" type="Sprite" parent="custom/css"]
position = Vector2( 219, -115 )
texture = ExtResource( 41 )

[node name="toybonnie" type="Sprite" parent="custom/css"]
position = Vector2( 64, -115 )
texture = ExtResource( 6 )

[node name="credits" type="Node2D" parent="."]

[node name="static" type="AnimatedSprite" parent="credits"]
modulate = Color( 0.258824, 0.0823529, 0.0823529, 1 )
position = Vector2( 1429, 670 )
scale = Vector2( 2.18958, 2.33704 )
z_index = -1
frames = SubResource( 1 )
frame = 3
playing = true

[node name="fade6" type="Sprite" parent="credits"]
position = Vector2( 896, 637 )
rotation = 1.5708
scale = Vector2( 0.999219, 0.840425 )
texture = ExtResource( 44 )

[node name="Shadow" type="Sprite" parent="credits"]
position = Vector2( 1426, 678 )
scale = Vector2( 0.796875, 0.830556 )
texture = ExtResource( 20 )

[node name="Creditstext" type="Sprite" parent="credits"]
position = Vector2( 1008, 407 )
texture = ExtResource( 12 )

[node name="Returntext" type="Sprite" parent="credits"]
position = Vector2( 993, 955 )
texture = ExtResource( 18 )

[node name="creditslist" type="RichTextLabel" parent="credits"]
margin_left = 978.0
margin_top = 458.0
margin_right = 1868.0
margin_bottom = 902.0
custom_fonts/normal_font = SubResource( 18 )
text = "General Credits:
Original Ultimate Custom Night Assets - Scott Cawthon
FNaF Office Perspective Shader - b en
Graphic Design/Coding - Nemisune
Discord Rich Presence Addon - samsface
Sound effects sourced from FreeSound.org:
Menu music - Timbre
Menu select SFX - Speedenza
Menu hover SFX - Breviceps
Night begin SFX - AudioPapkin
AI level adjuster SFX - bbrocer
"

[node name="returnCredits" type="Button" parent="credits"]
self_modulate = Color( 1, 1, 1, 0 )
margin_left = 917.0
margin_top = 937.0
margin_right = 1070.0
margin_bottom = 974.0

[node name="player" type="AnimationPlayer" parent="."]
anims/RESET = SubResource( 2 )
anims/go2credits = SubResource( 19 )
anims/go2custom = SubResource( 13 )
anims/go2settings = SubResource( 5 )
anims/main = SubResource( 4 )
anims/settings = SubResource( 12 )
anims/warning = SubResource( 3 )

[node name="glitch" type="Sprite" parent="."]
self_modulate = Color( 1, 0, 0, 1 )
position = Vector2( 2173.75, -573.125 )
scale = Vector2( 1.37103, 0.399103 )
texture = ExtResource( 27 )

[node name="glitch2" type="Sprite" parent="."]
self_modulate = Color( 1, 0, 0, 1 )
position = Vector2( 2154.75, -703.125 )
scale = Vector2( 1.37103, 0.519058 )
texture = ExtResource( 27 )

[node name="camera" type="Camera2D" parent="."]
current = true

[node name="LogoLargeColorLight" type="Sprite" parent="."]
position = Vector2( -1006, 0 )
scale = Vector2( 0.272461, 0.272461 )
texture = ExtResource( 40 )

[node name="gl" type="Node2D" parent="."]
position = Vector2( -2520, 511 )
z_index = 99

[node name="flashdark" type="ColorRect" parent="gl"]
margin_left = -523.0
margin_top = -311.0
margin_right = 515.0
margin_bottom = 307.0

[node name="glplayer" type="AnimationPlayer" parent="gl"]
anims/RESET = SubResource( 20 )
anims/goodluck = SubResource( 21 )

[node name="Goodlucktext" type="Sprite" parent="gl"]
texture = ExtResource( 22 )

[node name="start" type="AudioStreamPlayer" parent="gl"]
stream = ExtResource( 21 )
volume_db = -13.041

[node name="goodluck" type="AudioStreamPlayer2D" parent="gl"]
position = Vector2( -552, 0 )
stream = ExtResource( 10 )

[node name="static" type="AnimatedSprite" parent="gl"]
modulate = Color( 0.258824, 0.0823529, 0.0823529, 1 )
scale = Vector2( 2.18958, 2.33704 )
z_index = -1
frames = SubResource( 1 )
frame = 2
playing = true

[node name="static2" type="AnimatedSprite" parent="gl"]
modulate = Color( 0.662745, 0.105882, 0.105882, 1 )
self_modulate = Color( 1, 1, 1, 0.415686 )
scale = Vector2( 2.46197, 2.62778 )
z_index = -1
frames = SubResource( 1 )
frame = 2
playing = true

[connection signal="pressed" from="main/settingsGo" to="." method="_on_settingsGo_pressed"]
[connection signal="pressed" from="main/testGo" to="." method="_on_testGo_pressed"]
[connection signal="pressed" from="main/customGo" to="." method="_on_customGo_pressed"]
[connection signal="pressed" from="main/creditsGo" to="." method="_on_creditsGo_pressed"]
[connection signal="pressed" from="settings/perspectivetoggle" to="settings" method="_on_perspectivetoggle_pressed"]
[connection signal="toggled" from="settings/perspectivetoggle" to="settings" method="_on_perspectivetoggle_toggled"]
[connection signal="pressed" from="settings/settingsBack" to="." method="_on_settingsBack_pressed"]
[connection signal="value_changed" from="settings/volumeslider" to="settings" method="_on_volumeslider_value_changed"]
[connection signal="pressed" from="custom/returnCSS" to="." method="_on_returnCSS_pressed"]
[connection signal="pressed" from="custom/begin" to="." method="_on_begin_pressed"]
[connection signal="pressed" from="credits/returnCredits" to="." method="_on_returnCredits_pressed"]
[connection signal="animation_finished" from="player" to="." method="_on_player_animation_finished"]
[connection signal="animation_finished" from="gl/glplayer" to="." method="_on_glplayer_animation_finished"]
